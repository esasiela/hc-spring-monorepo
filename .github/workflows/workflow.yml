name: Verify and Publish

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  REGISTRY: ghcr.io
  # the github.repository is hc-spring-monorepo
  #IMAGE_NAME: ${{ github.repository }}
  IMAGE_NAME: hc-auth-api

jobs:
  verify:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout GitHub repo
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Report non-main branch
        if: github.ref != 'refs/heads/main'
        run: echo 'Not on [main] branch - [${{ github.ref }}]'

      - name: Report main branch
        if: github.ref == 'refs/heads/main'
        run: echo 'On [main] branch - [${{ github.ref }}]'

      - name: Maven verify
        run: mvn --batch-mode --update-snapshots verify

      - name: Inspect working directory
        run: |
          echo "Working directory..."
          pwd
          ls -lart

      - name: List target dirs
        run: find . -type d -name "target"

      - name: Inspect hc-spring-lib/target
        run: ls -lart hc-spring-lib/target

      - name: Inspect hc-spring-test/target
        run: ls -lart hc-spring-test/target

      - name: Inspect hc-auth-api/target
        run: ls -lart hc-auth-api/target

      - name: Upload hc-spring-lib target
        if: github.ref == 'refs/heads/main'
        uses: actions/upload-artifact@v4
        with:
          name: hc-spring-lib-target
          path: hc-spring-lib/target/

      - name: Upload hc-spring-test target
        if: github.ref == 'refs/heads/main'
        uses: actions/upload-artifact@v4
        with:
          name: hc-spring-test-target
          path: hc-spring-test/target/

      - name: Upload hc-auth-api target
        if: github.ref == 'refs/heads/main'
        uses: actions/upload-artifact@v4
        with:
          name: hc-auth-api-target
          path: hc-auth-api/target/

      # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
      #- name: Update dependency graph
      #  uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6

  docker-build-push:
    if: ${{ github.ref == 'refs/heads/main' }}

    runs-on: ubuntu-latest
    needs: verify
    defaults:
      run:
        working-directory: hc-auth-api

    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    steps:
      - name: Checkout GitHub repo
        uses: actions/checkout@v4

      - name: Download maven target
        uses: actions/download-artifact@v4
        with:
          name: hc-auth-api-target
          path: hc-auth-api/target/

      - name: Inspect working directory
        run: |
          echo "Working directory..."
          pwd
          ls -lart

      - name: List target dirs
        run: find . -type d -name "target"

      - name: Inspect target
        run: ls -lart target

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ github.actor }}/${{ env.IMAGE_NAME }}
          # ghcr.io/<your_username>/hc-auth-api:main

      - name: Build and push Docker image to GitHub Container registry
        id: push
        uses: docker/build-push-action@v6
        with:
          context: hc-auth-api
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v2
        with:
          subject-name: ${{ env.REGISTRY }}/${{ github.actor }}/${{ env.IMAGE_NAME }}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true

  maven-publish-lib:
    if: ${{ github.ref == 'refs/heads/main' }}

    runs-on: ubuntu-latest
    needs: verify
    defaults:
      run:
        working-directory: hc-spring-lib

    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout GitHub repo
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Download maven target
        uses: actions/download-artifact@v4
        with:
          name: hc-spring-lib-target
          path: hc-spring-lib/target/

      - name: Inspect working directory
        run: |
          echo "Working directory..."
          pwd
          ls -lart

      - name: List target dirs
        run: find . -type d -name "target"

      - name: Inspect target
        run: ls -lart target

      - name: Publish to GitHub Packages
        run: mvn --batch-mode deploy
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  maven-publish-test:
    if: ${{ github.ref == 'refs/heads/main' }}

    runs-on: ubuntu-latest
    needs:
      - verify
      - maven-publish-lib
    defaults:
      run:
        working-directory: hc-spring-test

    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout GitHub repo
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Download maven target
        uses: actions/download-artifact@v4
        with:
          name: hc-spring-test-target
          path: hc-spring-test/target/

      - name: Inspect working directory
        run: |
          echo "Working directory..."
          pwd
          ls -lart

      - name: List target dirs
        run: find . -type d -name "target"

      - name: Inspect target
        run: ls -lart target

      - name: Publish to GitHub Packages
        run: mvn --batch-mode deploy
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
